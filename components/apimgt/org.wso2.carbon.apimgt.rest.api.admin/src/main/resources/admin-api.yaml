swagger: '2.0'
######################################################
# Prolog
######################################################
info:
  version: "0.9.0"
  title: "WSO2 API Manager - Admin"
  description: |
    This document specifies a **RESTful API** for WSO2 **API Manager** - Admin Portal.

    It is written with [swagger 2](http://swagger.io/).

  contact:
    name: "WSO2"
    url: "http://wso2.com/products/api-manager/"
    email: "architecture@wso2.com"
  license: 
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

######################################################
# The fixed parts of the URLs of the API
######################################################

# The schemes supported by the API
schemes: 
  - https

# The domain of the API.
# This is configured by the customer during deployment.
# The given host is just an example.
host: apis.wso2.com

# The base path of the API.
# Will be prefixed to all paths.
basePath: /api/am/admin/v0.9

# The following media types can be passed as input in message bodies of the API.
# The actual media type must be specified in the Content-Type header field of the request.
# The default is json, i.e. the Content-Type header is not needed to
# be set, but supporting it serves extensibility.
consumes: 
  - application/json

# The following media types may be passed as output in message bodies of the API.
# The media type(s) consumable by the requestor is specified in the Accept header field
# of the corresponding request. 
# The actual media type returned will be specfied in the Content-Type header field 
# of the of the response.
# The default of the Accept header is json, i.e. there is not needed to
# set the value, but supporting it serves extensibility.
produces: 
  - application/json

x-wso2-security:
  apim:
    x-wso2-scopes:
      - description: ""
        roles: admin
        name: apim:tier_view
        key: apim:tier_view
      - description: ""
        roles: admin
        name: apim:tier_manage
        key: apim:tier_manage
      - description: ""
        roles: admin
        name: apim:bl_view
        key: apim:bl_view
      - description: ""
        roles: admin
        name: apim:bl_manage
        key: apim:bl_manage


######################################################
# The "API Collection" resource APIs
######################################################
paths:
######################################################
# The "Application Throttle Policy Collection" resource API
######################################################
  '/throttling/policies/application':

#-----------------------------------------------------
# Retrieve all Application level policies
#-----------------------------------------------------
    get:
      x-scope: apim:tier_view
#      x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Bronze"
#      x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 1,\n   \"description\": \"Allows 1 request(s) per minute.\",\n   \"name\": \"Bronze\",\n   \"attributes\": {}\n}"
      summary: Get all Application level throttle policies
      description: |
        Get all Application level throttle policies
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Throttling
      responses:
        200:
          description: |
            OK.
            Policies returned
          schema:
            $ref: '#/definitions/ApplicationThrottlePolicyList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported.
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Add a Application level throttle policy
#-----------------------------------------------------  
    post:
      x-scope: apim:tier_manage
#      x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Bronze"
#      x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 1,\n   \"description\": \"Allows 1 request(s) per minute.\",\n   \"name\": \"Bronze\",\n   \"attributes\": {}\n}"
      summary: Add an Application level throttle policy
      description: |
        Add an Application level throttle policy
      parameters:
        - in: body
          name: body
          description: |
            Application level policy object that should to be added
          required: true
          schema:
            $ref: '#/definitions/ApplicationThrottlePolicy'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Throttling
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created object as entity in the body.
            Location header contains URL of newly created entity.
          schema:
            $ref: '#/definitions/ApplicationThrottlePolicy'
          headers:
            Location:
              description: |
                Location of the newly created Policy object.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional request'
              type: string
        400:
          description: |
            Bad Request.
            Invalid request or validation error
          schema:
            $ref: '#/definitions/Error'
        415:
          description: |
            Unsupported media type.
            The entity of the request was in a not supported format.

######################################################
# The "Individual Application Throttle Policy" resource API
######################################################
  '/throttling/policies/application/{policyName}': 
  
#-----------------------------------------------------
# Retrieve a certain Application Policy
#-----------------------------------------------------
    get:
      x-scope: apim:tier_view
#        x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Bronze"
#        x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 1,\n   \"description\": \"Allows 1 request(s) per minute.\",\n   \"name\": \"Bronze\",\n   \"attributes\": {}\n}"
      summary: Retrieve an Application Policy
      description: |
        Retrieve an Application Policy providing the policy name.
      parameters:
        - $ref: '#/parameters/policyName'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Throttling
      responses:
        200:
          description: |
            OK.
            Policy returned
          schema:
            $ref: '#/definitions/ApplicationThrottlePolicy'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        404:
          description: |
            Not Found.
            Requested Tier does not exist.
          schema:
            $ref: '#/definitions/Error'
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported.
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Delete an API level throttle policy
#-----------------------------------------------------  
    delete:
      x-scope: apim:tier_manage
#      x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" -X POST \"http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Low\""
#      x-wso2-response: "HTTP/1.1 200 OK"
      summary: Delete an Application level throttle policy
      description: |
        Delete an Application level throttle policy
      parameters:
        - $ref: '#/parameters/policyName'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Throttling
      responses:
        200:
          description: |
            OK.
            Resource successfully deleted.
        404:
          description: |
            Not Found.
            Resource to be deleted does not exist.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            Precondition Failed.
            The request has not been performed because one of the preconditions is not met.
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Update an API throttle policy
#-----------------------------------------------------
    put:
      x-scope: apim:tier_manage
#      x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" -H \"Content-Type: application/json\" -X PUT -d @data.json \"http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Low\""
#      x-wso2-request: "{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 10,\n   \"description\": \"Allows 10 request(s) per minute.\",\n   \"name\": \"Low\",\n   \"attributes\":    {\n      \"a\": \"30\",\n      \"b\": \"10\",\n      \"c\": \"20\"\n   }\n}\n"
#      x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 10,\n   \"description\": \"Allows 10 request(s) per minute.\",\n   \"name\": \"Low\",\n   \"attributes\":    {\n      \"b\": \"10\",\n      \"c\": \"20\",\n      \"a\": \"30\"\n   }\n}"
      summary: Update an Application level throttle policy
      description: |
        Update an Application level throttle policy
      parameters:
        - $ref: '#/parameters/policyName'
        - in: body
          name: body
          description: |
            Policy object that needs to be modified
          required: true
          schema:
            $ref: '#/definitions/ApplicationThrottlePolicy'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Throttling
      responses:
        200:
          description: |
            OK.
            Policy updated.
          schema:
            $ref: '#/definitions/ApplicationThrottlePolicy'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional request.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.
              type: string
        400:
          description: |
            Bad Request.
            Invalid request or validation error.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            Not Found.
            The resource to be updated does not exist.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            Precondition Failed.
            The request has not been performed because one of the preconditions is not met.
          schema:
            $ref: '#/definitions/Error'



######################################################
# The "Subscription Throttle Policy Collection" resource API
######################################################
  '/throttling/policies/subscription':

#-----------------------------------------------------
# Retrieve all Subscription level policies
#-----------------------------------------------------
    get:
      x-scope: apim:tier_view
#      x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Bronze"
#      x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 1,\n   \"description\": \"Allows 1 request(s) per minute.\",\n   \"name\": \"Bronze\",\n   \"attributes\": {}\n}"
      summary: Get all Subscription level throttle policies
      description: |
        Get all Subscription level throttle policies
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Throttling
      responses:
        200:
          description: |
            OK.
            Policies returned
          schema:
            $ref: '#/definitions/SubscriptionThrottlePolicyList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported.
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Add a Subscription level throttle policy
#-----------------------------------------------------  
    post:
      x-scope: apim:tier_manage
#      x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Bronze"
#      x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 1,\n   \"description\": \"Allows 1 request(s) per minute.\",\n   \"name\": \"Bronze\",\n   \"attributes\": {}\n}"
      summary: Add a Subscription level throttle policy
      description: |
        Add a Subscription level throttle policy
      parameters:
        - in: body
          name: body
          description: |
            Subscripion level policy object that should to be added
          required: true
          schema:
            $ref: '#/definitions/SubscriptionThrottlePolicy'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Throttling
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created object as entity in the body.
            Location header contains URL of newly created entity.
          schema:
            $ref: '#/definitions/SubscriptionThrottlePolicy'
          headers:
            Location:
              description: |
                Location of the newly created Policy object.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional request'
              type: string
        400:
          description: |
            Bad Request.
            Invalid request or validation error
          schema:
            $ref: '#/definitions/Error'
        415:
          description: |
            Unsupported media type.
            The entity of the request was in a not supported format.

######################################################
# The "Individual Subscription Throttle Policy" resource API
######################################################
  '/throttling/policies/subscription/{policyName}': 
  
#-----------------------------------------------------
# Retrieve a certain Subscription Policy
#-----------------------------------------------------
    get:
      x-scope: apim:tier_view
#        x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Bronze"
#        x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 1,\n   \"description\": \"Allows 1 request(s) per minute.\",\n   \"name\": \"Bronze\",\n   \"attributes\": {}\n}"
      summary: Retrieve a Subscription Policy
      description: |
        Retrieve a Subscription Policy providing the policy name.
      parameters:
        - $ref: '#/parameters/policyName'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Throttling
      responses:
        200:
          description: |
            OK.
            Policy returned
          schema:
            $ref: '#/definitions/SubscriptionThrottlePolicy'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        404:
          description: |
            Not Found.
            Requested Policy does not exist.
          schema:
            $ref: '#/definitions/Error'
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported.
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Delete a Subscription level throttle policy
#-----------------------------------------------------  
    delete:
      x-scope: apim:tier_manage
#      x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" -X POST \"http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Low\""
#      x-wso2-response: "HTTP/1.1 200 OK"
      summary: Delete a Subscription level throttle policy
      description: |
        Delete a Subscription level throttle policy
      parameters:
        - $ref: '#/parameters/policyName'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Throttling
      responses:
        200:
          description: |
            OK.
            Resource successfully deleted.
        404:
          description: |
            Not Found.
            Resource to be deleted does not exist.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            Precondition Failed.
            The request has not been performed because one of the preconditions is not met.
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Update a Subscription throttle policy
#-----------------------------------------------------
    put:
      x-scope: apim:tier_manage
#      x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" -H \"Content-Type: application/json\" -X PUT -d @data.json \"http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Low\""
#      x-wso2-request: "{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 10,\n   \"description\": \"Allows 10 request(s) per minute.\",\n   \"name\": \"Low\",\n   \"attributes\":    {\n      \"a\": \"30\",\n      \"b\": \"10\",\n      \"c\": \"20\"\n   }\n}\n"
#      x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 10,\n   \"description\": \"Allows 10 request(s) per minute.\",\n   \"name\": \"Low\",\n   \"attributes\":    {\n      \"b\": \"10\",\n      \"c\": \"20\",\n      \"a\": \"30\"\n   }\n}"
      summary: Update a Subscription level throttle policy
      description: |
        Update a Subscription level throttle policy
      parameters:
        - $ref: '#/parameters/policyName'
        - in: body
          name: body
          description: |
            Policy object that needs to be modified
          required: true
          schema:
            $ref: '#/definitions/SubscriptionThrottlePolicy'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Throttling
      responses:
        200:
          description: |
            OK.
            Policy updated.
          schema:
            $ref: '#/definitions/SubscriptionThrottlePolicy'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional request.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.
              type: string
        400:
          description: |
            Bad Request.
            Invalid request or validation error.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            Not Found.
            The resource to be updated does not exist.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            Precondition Failed.
            The request has not been performed because one of the preconditions is not met.
          schema:
            $ref: '#/definitions/Error'

######################################################
# The "Global Throttle Policy Collection" resource API
######################################################
  '/throttling/policies/global':

#-----------------------------------------------------
# Retrieve all Global level policies
#-----------------------------------------------------
    get:
      x-scope: apim:tier_view
#      x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Bronze"
#      x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 1,\n   \"description\": \"Allows 1 request(s) per minute.\",\n   \"name\": \"Bronze\",\n   \"attributes\": {}\n}"
      summary: Get all Global level throttle policies
      description: |
        Get all Global level throttle policies
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Throttling
      responses:
        200:
          description: |
            OK.
            Policies returned
          schema:
            $ref: '#/definitions/GlobalThrottlePolicyList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported.
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Add a Global level throttle policy
#-----------------------------------------------------  
    post:
      x-scope: apim:tier_manage
#      x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Bronze"
#      x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 1,\n   \"description\": \"Allows 1 request(s) per minute.\",\n   \"name\": \"Bronze\",\n   \"attributes\": {}\n}"
      summary: Add a Global level throttle policy
      description: |
        Add a Global level throttle policy
      parameters:
        - in: body
          name: body
          description: |
            Global level policy object that should to be added
          required: true
          schema:
            $ref: '#/definitions/GlobalThrottlePolicy'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Throttling
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created object as entity in the body.
            Location header contains URL of newly created entity.
          schema:
            $ref: '#/definitions/GlobalThrottlePolicy'
          headers:
            Location:
              description: |
                Location of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional request'
              type: string
        400:
          description: |
            Bad Request.
            Invalid request or validation error
          schema:
            $ref: '#/definitions/Error'
        415:
          description: |
            Unsupported media type.
            The entity of the request was in a not supported format.

######################################################
# The "Individual Global Throttle Policy" resource API
######################################################
  '/throttling/policies/global/{policyName}': 
  
#-----------------------------------------------------
# Retrieve a certain Global Throttling Policy
#-----------------------------------------------------
    get:
      x-scope: apim:tier_view
#        x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Bronze"
#        x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 1,\n   \"description\": \"Allows 1 request(s) per minute.\",\n   \"name\": \"Bronze\",\n   \"attributes\": {}\n}"
      summary: Retrieve a Global Policy
      description: |
        Retrieve a Global Policy providing the policy name.
      parameters:
        - $ref: '#/parameters/policyName'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Throttling
      responses:
        200:
          description: |
            OK.
            Policy returned
          schema:
            $ref: '#/definitions/GlobalThrottlePolicy'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        404:
          description: |
            Not Found.
            Requested Policy does not exist.
          schema:
            $ref: '#/definitions/Error'
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported.
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Delete a Global level throttle policy
#-----------------------------------------------------  
    delete:
      x-scope: apim:tier_manage
#      x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" -X POST \"http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Low\""
#      x-wso2-response: "HTTP/1.1 200 OK"
      summary: Delete a Global level throttle policy
      description: |
        Delete a Global level throttle policy
      parameters:
        - $ref: '#/parameters/policyName'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Throttling
      responses:
        200:
          description: |
            OK.
            Resource successfully deleted.
        404:
          description: |
            Not Found.
            Resource to be deleted does not exist.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            Precondition Failed.
            The request has not been performed because one of the preconditions is not met.
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Update a Global throttle policy
#-----------------------------------------------------
    put:
      x-scope: apim:tier_manage
#      x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" -H \"Content-Type: application/json\" -X PUT -d @data.json \"http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Low\""
#      x-wso2-request: "{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 10,\n   \"description\": \"Allows 10 request(s) per minute.\",\n   \"name\": \"Low\",\n   \"attributes\":    {\n      \"a\": \"30\",\n      \"b\": \"10\",\n      \"c\": \"20\"\n   }\n}\n"
#      x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 10,\n   \"description\": \"Allows 10 request(s) per minute.\",\n   \"name\": \"Low\",\n   \"attributes\":    {\n      \"b\": \"10\",\n      \"c\": \"20\",\n      \"a\": \"30\"\n   }\n}"
      summary: Update a Global level throttle policy
      description: |
        Update a Global level throttle policy
      parameters:
        - $ref: '#/parameters/policyName'
        - in: body
          name: body
          description: |
            Policy object that needs to be modified
          required: true
          schema:
            $ref: '#/definitions/GlobalThrottlePolicy'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Throttling
      responses:
        200:
          description: |
            OK.
            Policy updated.
          schema:
            $ref: '#/definitions/GlobalThrottlePolicy'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional request.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.
              type: string
        400:
          description: |
            Bad Request.
            Invalid request or validation error.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            Not Found.
            The resource to be updated does not exist.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            Precondition Failed.
            The request has not been performed because one of the preconditions is not met.
          schema:
            $ref: '#/definitions/Error'


######################################################
# The "Advanced Throttle Policy Collection" resource API
######################################################
  '/throttling/policies/advanced-policies':

#-----------------------------------------------------
# Retrieve all Advanced level policies
#-----------------------------------------------------
    get:
      x-scope: apim:tier_view
#      x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Bronze"
#      x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 1,\n   \"description\": \"Allows 1 request(s) per minute.\",\n   \"name\": \"Bronze\",\n   \"attributes\": {}\n}"
      summary: Get all Advanced level throttle policies
      description: |
        Get all Advanced level throttle policies
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Throttling
      responses:
        200:
          description: |
            OK.
            Policies returned
          schema:
            $ref: '#/definitions/AdvancedThrottlePolicyList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported.
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Add an Advanced level throttle policy
#-----------------------------------------------------  
    post:
      x-scope: apim:tier_manage
#      x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Bronze"
#      x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 1,\n   \"description\": \"Allows 1 request(s) per minute.\",\n   \"name\": \"Bronze\",\n   \"attributes\": {}\n}"
      summary: Add an Advanced level throttle policy
      description: |
        Add an Advanced level throttle policy
      parameters:
        - in: body
          name: body
          description: |
            Advanced level policy object that should to be added
          required: true
          schema:
            $ref: '#/definitions/AdvancedThrottlePolicy'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Throttling
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created object as entity in the body.
            Location header contains URL of newly created entity.
          schema:
            $ref: '#/definitions/AdvancedThrottlePolicy'
          headers:
            Location:
              description: |
                Location of the newly created Advanced Throttle policy.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional request'
              type: string
        400:
          description: |
            Bad Request.
            Invalid request or validation error
          schema:
            $ref: '#/definitions/Error'
        415:
          description: |
            Unsupported media type.
            The entity of the request was in a not supported format.

######################################################
# The "Individual Advanced Throttle Policy" resource API
######################################################
  '/throttling/policies/advanced-policies/{policyName}': 
  
#-----------------------------------------------------
# Retrieve a certain Advanced Throttling Policy
#-----------------------------------------------------
    get:
      x-scope: apim:tier_view
#        x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Bronze"
#        x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 1,\n   \"description\": \"Allows 1 request(s) per minute.\",\n   \"name\": \"Bronze\",\n   \"attributes\": {}\n}"
      summary: Retrieve an Advanced Policy
      description: |
        Retrieve a Advanced Policy providing the policy name.
      parameters:
        - $ref: '#/parameters/policyName'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Throttling
      responses:
        200:
          description: |
            OK.
            Policy returned
          schema:
            $ref: '#/definitions/AdvancedThrottlePolicy'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        404:
          description: |
            Not Found.
            Requested Policy does not exist.
          schema:
            $ref: '#/definitions/Error'
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported.
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Delete an Advanced level throttle policy
#-----------------------------------------------------  
    delete:
      x-scope: apim:tier_manage
#      x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" -X POST \"http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Low\""
#      x-wso2-response: "HTTP/1.1 200 OK"
      summary: Delete an Advanced level throttle policy
      description: |
        Delete an Advanced level throttle policy
      parameters:
        - $ref: '#/parameters/policyName'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Throttling
      responses:
        200:
          description: |
            OK.
            Resource successfully deleted.
        404:
          description: |
            Not Found.
            Resource to be deleted does not exist.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            Precondition Failed.
            The request has not been performed because one of the preconditions is not met.
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Update an Advanced throttle policy
#-----------------------------------------------------
    put:
      x-scope: apim:tier_manage
#      x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" -H \"Content-Type: application/json\" -X PUT -d @data.json \"http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Low\""
#      x-wso2-request: "{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 10,\n   \"description\": \"Allows 10 request(s) per minute.\",\n   \"name\": \"Low\",\n   \"attributes\":    {\n      \"a\": \"30\",\n      \"b\": \"10\",\n      \"c\": \"20\"\n   }\n}\n"
#      x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 10,\n   \"description\": \"Allows 10 request(s) per minute.\",\n   \"name\": \"Low\",\n   \"attributes\":    {\n      \"b\": \"10\",\n      \"c\": \"20\",\n      \"a\": \"30\"\n   }\n}"
      summary: Update an Advanced level throttle policy
      description: |
        Update an Advanced level throttle policy
      parameters:
        - $ref: '#/parameters/policyName'
        - in: body
          name: body
          description: |
            Policy object that needs to be modified
          required: true
          schema:
            $ref: '#/definitions/AdvancedThrottlePolicy'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Throttling
      responses:
        200:
          description: |
            OK.
            Policy updated.
          schema:
            $ref: '#/definitions/AdvancedThrottlePolicy'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional request.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.
              type: string
        400:
          description: |
            Bad Request.
            Invalid request or validation error.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            Not Found.
            The resource to be updated does not exist.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            Precondition Failed.
            The request has not been performed because one of the preconditions is not met.
          schema:
            $ref: '#/definitions/Error'

######################################################
# The "Blocking Condition Collection" resource API
######################################################
  '/throttling/blacklist':

#-----------------------------------------------------
# Retrieve all Blocking conditions
#-----------------------------------------------------
    get:
      x-scope: apim:bl_view
#      x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Bronze"
#      x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 1,\n   \"description\": \"Allows 1 request(s) per minute.\",\n   \"name\": \"Bronze\",\n   \"attributes\": {}\n}"
      summary: Get all blocking condtions
      description: |
        Get all blocking condtions
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Throttling
      responses:
        200:
          description: |
            OK.
            Blocking conditions returned
          schema:
            $ref: '#/definitions/BlockingConditionList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported.
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Add a Global level throttle policy
#-----------------------------------------------------  
    post:
      x-scope: apim:bl_manage
#      x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Bronze"
#      x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 1,\n   \"description\": \"Allows 1 request(s) per minute.\",\n   \"name\": \"Bronze\",\n   \"attributes\": {}\n}"
      summary: Add a Blocking condition
      description: |
        Add a Blocking condition
      parameters:
        - in: body
          name: body
          description: |
            Blocking condition object that should to be added
          required: true
          schema:
            $ref: '#/definitions/BlockingCondition'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Throttling
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created object as entity in the body.
            Location header contains URL of newly created entity.
          schema:
            $ref: '#/definitions/BlockingCondition'
          headers:
            Location:
              description: |
                Location of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional request'
              type: string
        400:
          description: |
            Bad Request.
            Invalid request or validation error
          schema:
            $ref: '#/definitions/Error'
        415:
          description: |
            Unsupported media type.
            The entity of the request was in a not supported format.

######################################################
# The "Individual Blocking Condition" resource API
######################################################
  '/throttling/blacklist/{conditionId}': 
  
#-----------------------------------------------------
# Retrieve a Blocking condition
#-----------------------------------------------------
    get:
      x-scope: apim:bl_view
#        x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Bronze"
#        x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 1,\n   \"description\": \"Allows 1 request(s) per minute.\",\n   \"name\": \"Bronze\",\n   \"attributes\": {}\n}"
      summary: Retrieve a Blocking Condition
      description: |
        Retrieve a Blocking Condition providing the condition Id
      parameters:
        - $ref: '#/parameters/conditionId'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      tags:
        - Throttling
      responses:
        200:
          description: |
            OK.
            Condition returned
          schema:
            $ref: '#/definitions/BlockingCondition'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        404:
          description: |
            Not Found.
            Requested Condition does not exist.
          schema:
            $ref: '#/definitions/Error'
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported.
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Delete a Blocking condition
#-----------------------------------------------------  
    delete:
      x-scope: apim:bl_manage
#      x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" -X POST \"http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Low\""
#      x-wso2-response: "HTTP/1.1 200 OK"
      summary: Delete a Blocking condition
      description: |
        Delete a Blocking condition
      parameters:
        - $ref: '#/parameters/conditionId'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Throttling
      responses:
        200:
          description: |
            OK.
            Resource successfully deleted.
        404:
          description: |
            Not Found.
            Resource to be deleted does not exist.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            Precondition Failed.
            The request has not been performed because one of the preconditions is not met.
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Update a Blocking condition
#-----------------------------------------------------
    put:
      x-scope: apim:bl_manage
#      x-wso2-curl: "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" -H \"Content-Type: application/json\" -X PUT -d @data.json \"http://127.0.0.1:9763/api/am/publisher/v0.9/tiers/api/Low\""
#      x-wso2-request: "{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 10,\n   \"description\": \"Allows 10 request(s) per minute.\",\n   \"name\": \"Low\",\n   \"attributes\":    {\n      \"a\": \"30\",\n      \"b\": \"10\",\n      \"c\": \"20\"\n   }\n}\n"
#      x-wso2-response: "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"unitTime\": 60000,\n   \"tierPlan\": \"FREE\",\n   \"tierLevel\": \"api\",\n   \"stopOnQuotaReach\": true,\n   \"requestCount\": 10,\n   \"description\": \"Allows 10 request(s) per minute.\",\n   \"name\": \"Low\",\n   \"attributes\":    {\n      \"b\": \"10\",\n      \"c\": \"20\",\n      \"a\": \"30\"\n   }\n}"
      summary: Update a Blocking condition
      description: |
        Update a Blocking condition
      parameters:
        - $ref: '#/parameters/conditionId'
        - in: body
          name: body
          description: |
            Blocking condition object that needs to be modified
          required: true
          schema:
            $ref: '#/definitions/BlockingCondition'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      tags:
        - Throttling
      responses:
        200:
          description: |
            OK.
            Policy updated.
          schema:
            $ref: '#/definitions/BlockingCondition'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional request.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.
              type: string
        400:
          description: |
            Bad Request.
            Invalid request or validation error.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            Not Found.
            The resource to be updated does not exist.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            Precondition Failed.
            The request has not been performed because one of the preconditions is not met.
          schema:
            $ref: '#/definitions/Error'

######################################################
# Parameters - required by some of the APIs above
######################################################
parameters:

# Throttle Policy Id
# Specified as part of the path expression
  policyName:
    name: policyName
    in: path
    description: |
      Thorttle policy name
    type: string
    required: true

# Blocking Condition Id
# Specified as part of the path expression
  conditionId:
    name: conditionId
    in: path
    description: |
      Blocking condition identifier 
    type: string
    required: true

# Used for pagination:
# The maximum number of resoures to be returned by a GET
  limit:
    name: limit
    in: query
    description: |
      Maximum size of resource array to return.
    default: 25
    type: integer

# Used for pagination:
# The order number of an instance in a qualified set of resoures
# at which to start to return the next batch of qualified resources
  offset:
    name: offset
    in: query
    description: |
      Starting point within the complete list of items qualified.
    default: 0
    type: integer

# The HTTP Accept header
  Accept:
    name: Accept
    in: header
    description: |
      Media types acceptable for the response. Default is JSON.
    default: JSON
    type: string

# The HTTP Content-Type header
  Content-Type:
    name: Content-Type
    in: header
    description: |
      Media type of the entity in the body. Default is JSON.
    default: JSON
    required: true
    type : string

# The HTTP If-None-Match header
# Used to avoid retrieving data that are already cached
  If-None-Match:
    name: If-None-Match
    in: header
    description: |
      Validator for conditional requests; based on the ETag of the formerly retrieved
      variant of the resourec.
    type : string

# The HTTP If-Modified-Since header
# Used to avoid retrieving data that are already cached
  If-Modified-Since:
    name: If-Modified-Since
    in: header
    description: |
      Validator for conditional requests; based on Last Modified header of the
      formerly retrieved variant of the resource.
    type: string

# The HTTP If-Match header
# Used to avoid concurrent updates
  If-Match:
    name: If-Match
    in: header
    description: |
      Validator for conditional requests; based on ETag.
    type: string

# The HTTP If-Unmodified-Since header
# Used to avoid concurrent updates
  If-Unmodified-Since:
    name: If-Unmodified-Since
    in: header
    description: |
      Validator for conditional requests; based on Last Modified header.
    type: string

######################################################
# The resources used by some of the APIs above within the message body
######################################################
definitions:

#-----------------------------------------------------
# The Error resource
#-----------------------------------------------------
  Error:
    title: Error object returned with 4XX HTTP status
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
        description: Error message.
      description:
        type: string
        description: |
          A detail description about the error message.
      moreInfo:
        type: string
        description: |
          Preferably an url with more details about the error.
      error:
        type: array
        description: |
          If there are more than one error list them out.
          For example, list out validation errors by each field.
        items:
          $ref: '#/definitions/ErrorListItem'

#-----------------------------------------------------
# The Error List Item resource
#-----------------------------------------------------
  ErrorListItem:
    title: Description of individual errors that may have occurred during a request.
    required:
      - code
      - message
    properties:
      code:
        type: string
      message:
        type: string
        description: |
          Description about individual errors occurred

#-----------------------------------------------------
# The Throttle Policy resource
#-----------------------------------------------------
  ThrottlePolicy :
    title: Generic Throttle Policy
    properties:         
      policyName:
        type: string
      displayName:
        type: string
      description:
        type: string
      defaultLimit:
        $ref: '#/definitions/ThrottleLimit'
      tenantDomain:
        type: string
      isDeployed:
        type: boolean
  

#-----------------------------------------------------
# The Advanced Throttle Policy resource
#-----------------------------------------------------
  AdvancedThrottlePolicy : 
    title: Advanced Throttling Policy
    allOf:
      - $ref: '#/definitions/ThrottlePolicy'
      - properties:
          userLevel:
            type: string
            description: Applicable throttling level
            enum:
              - apiLevel
              - userLevel
          conditionalGroups:
            type: array
            items:
              $ref: '#/definitions/ConditionalGroup'

#-----------------------------------------------------
# The Advanced Throttle Policy List resource
#-----------------------------------------------------
  AdvancedThrottlePolicyList:
    title: Advanced Throttle Policy List
    properties:
      count:
        type: integer
        description: |
          Number of Advanced throttle policies returned.
        example: 1
      next:
        type: string
        description: |
          Link to the next subset of resources qualified.
          Empty if no more resources are to be returned.
          example: "/throttling/policies/advnced-policies?limit=1&offset=2&query="
      previous:
        type: string
        description: |
          Link to the previous subset of resources qualified.
          Empty if current subset is the first subset returned.
          example: "/throttling/policies/advnced-policies?limit=1&offset=0&query="
      list:
        type: array
        items:
          $ref: '#/definitions/AdvancedThrottlePolicy'

#-----------------------------------------------------
# The Application Throttle Policy resource
#-----------------------------------------------------
  ApplicationThrottlePolicy:
    title: Application Throttle Policy
    allOf:
      - $ref: '#/definitions/ThrottlePolicy'

#-----------------------------------------------------
# The Advanced Throttle Policy List resource
#-----------------------------------------------------
  ApplicationThrottlePolicyList:
    title: Application Level Throttle Policy List
    properties:
      count:
        type: integer
        description: |
          Number of Application throttle policies returned.
        example: 1
      next:
        type: string
        description: |
          Link to the next subset of resources qualified.
          Empty if no more resources are to be returned.
          example: "/throttling/policies/application?limit=1&offset=2&query="
      previous:
        type: string
        description: |
          Link to the previous subset of resources qualified.
          Empty if current subset is the first subset returned.
          example: "/throttling/policies/application?limit=1&offset=0&query="
      list:
        type: array
        items:
          $ref: '#/definitions/ApplicationThrottlePolicy'

#-----------------------------------------------------
# The Subscription Throttle Policy resource
#-----------------------------------------------------
  SubscriptionThrottlePolicy:
    title: Subscription Throttle Policy
    allOf:
      - $ref: '#/definitions/ThrottlePolicy'
      - properties:
          rateLimitCount:
            type: integer
          rateLimitTimeUnit:
            type: string
          customAttributes:
            description: |
              Custom attributes added to the Subscription Throttle policy
            type: array
            items:
              $ref: '#/definitions/CustomAttribute'
            additionalProperties:
              type: string
            example: {}
          stopOnQuotaReach:
            type: boolean
          billingPlan:
            type: string

#-----------------------------------------------------
# The Subscription Throttle Policy List resource
#-----------------------------------------------------
  SubscriptionThrottlePolicyList:
    title: Subscription Level Throttle Policy List
    properties:
      count:
        type: integer
        description: |
          Number of Subscription throttle policies returned.
        example: 1
      next:
        type: string
        description: |
          Link to the next subset of resources qualified.
          Empty if no more resources are to be returned.
          example: "/throttling/policies/subscription?limit=1&offset=2&query="
      previous:
        type: string
        description: |
          Link to the previous subset of resources qualified.
          Empty if current subset is the first subset returned.
          example: "/throttling/policies/subscription?limit=1&offset=0&query="
      list:
        type: array
        items:
          $ref: '#/definitions/SubscriptionThrottlePolicy'

#-----------------------------------------------------
# The Global Throttle Policy resource
#-----------------------------------------------------
  GlobalThrottlePolicy:
    title: Global Throttle Policy
    allOf:
      - $ref: '#/definitions/ThrottlePolicy'
      - properties:
          siddhiQuery:
            type: string
          keyTemplate:
            type: string

#-----------------------------------------------------
# The Global Throttle Policy List resource
#-----------------------------------------------------
  GlobalThrottlePolicyList:
    title: Global Level Throttle Policy List
    properties:
      count:
        type: integer
        description: |
          Number of Global throttle policies returned.
        example: 1
      next:
        type: string
        description: |
          Link to the next subset of resources qualified.
          Empty if no more resources are to be returned.
          example: "/throttling/policies/global?limit=1&offset=2&query="
      previous:
        type: string
        description: |
          Link to the previous subset of resources qualified.
          Empty if current subset is the first subset returned.
          example: "/throttling/policies/global?limit=1&offset=0&query="
      list:
        type: array
        items:
          $ref: '#/definitions/GlobalThrottlePolicy'

#-----------------------------------------------------
# The Conditional Group resource
#-----------------------------------------------------
  ConditionalGroup :
    title: Conditional Groups for Throttling
    properties:
      id:
        type: integer
      enabled:
        type: boolean
      description:
        type: string
      conditions:
        type: array
        items:
          $ref: '#/definitions/ThrottleCondition'
      limit:
        $ref: '#/definitions/ThrottleLimit'

#-----------------------------------------------------
# The Throttle Condition resource
#-----------------------------------------------------
  ThrottleCondition:
    discriminator: type
    x-wso2-subtypes:
      - DateCondition
      - DateRangeCondition
      - HTTPVerbCondition
      - HeaderCondition
      - IPCondition
      - JWTClaimsCondition
      - QueryParameterCondition
    title: Conditions used for Throttling
    description: Throttling Conditions
    required:
      - type
    properties:
      type:
        type: string
        enum:
          - DateCondition
          - DateRangeCondition
          - HTTPVerbCondition
          - HeaderCondition
          - IPCondition
          - JWTClaimsCondition
          - QueryParameterCondition
      invertCondition:
        type: boolean
      enabled:
        type: boolean

#-----------------------------------------------------
# The Throttle Date Condition resource
#-----------------------------------------------------
  DateCondition:
    title: Date based throttle condition
    allOf:
      - $ref: '#/definitions/ThrottleCondition'
      - properties:
          specificDate:
            type: string

#-----------------------------------------------------
# The Throttle Date Range resource
#-----------------------------------------------------
  DateRangeCondition :
    title: Date range based throttle condition
    allOf:
      - $ref: '#/definitions/ThrottleCondition'
      - properties:
          startingDate:
            type: string
          endingDate:
            type: string

#-----------------------------------------------------
# The Throttle HTTP Verb Condition resource
#-----------------------------------------------------
  HTTPVerbCondition:
    title: Http verb based throttle condition
    allOf:
      - $ref: '#/definitions/ThrottleCondition'
      - properties:
          httpVerb:
            type: string

#-----------------------------------------------------
# The Throttle HTTP Header Condition resource
#-----------------------------------------------------
  HeaderCondition:
    title: HTTP Header based throttle condition
    allOf:
      - $ref: '#/definitions/ThrottleCondition'
      - properties:
          headerName:
            type: string
          headerValue:
            type: string

#-----------------------------------------------------
# The Throttle IP Condition resource
#-----------------------------------------------------
  IPCondition:
    title: IP based throttle condition
    allOf:
      - $ref: '#/definitions/ThrottleCondition'
      - properties:
          ipConditionType:
            type: string
            enum:
              - IPRange
              - IPSpecific
          specificIP:
            type: string
          startingIP:
            type: string
          endingIP:
            type: string

#-----------------------------------------------------
# The Throttle JWT Claims Condition resource
#-----------------------------------------------------
  JWTClaimsCondition:
    title:  JWT claim attibute based throttle condition
    allOf:
      - $ref: '#/definitions/ThrottleCondition'
      - properties:
          claimUrl: 
            type: string
          attribute: 
            type: string

#-----------------------------------------------------
# The Throttle Query Parameter Condition resource
#-----------------------------------------------------
  QueryParameterCondition:
    title: Query parameter based throttle condition
    allOf:
      - $ref: '#/definitions/ThrottleCondition'
      - properties:
          parameterName:
            type: string
          parameterValue:
            type: string

#-----------------------------------------------------
# The Throttle Limit resource
#-----------------------------------------------------
  ThrottleLimit :
    discriminator: type
    x-wso2-subtypes:
      - RequestCountLimit
      - BandwidthLimit
    required:
      - type
    properties:
      type:
        type: string
        enum:
          - RequestCountLimit
          - BandwidthLimit
      timeUnit:
        type: string
      unitTime:
        type: integer
  
#-----------------------------------------------------
# The Throttle Bandwidth Limit resource
#-----------------------------------------------------
  BandwidthLimit :
    allOf:
      - $ref: '#/definitions/ThrottleLimit'
      - properties:
          dataAmount:
            type: integer
            format: int64
          dataUnit:
            type: string

#-----------------------------------------------------
# The Throttle Request Count Limit resource
#-----------------------------------------------------
  RequestCountLimit :
    allOf:
      - $ref: '#/definitions/ThrottleLimit'
      - properties:
          requestCount:
            type: integer
            format: int64

#-----------------------------------------------------
# The Throttle Blocking Condition resource
#-----------------------------------------------------
  BlockingCondition:
    title: Blocking Conditions
    description: Blocking Conditions
    properties:
      conditionId:
        type: string
      enabled:
        type: boolean
      conditionType:
        type: string
      conditionValue:
        type: string

#-----------------------------------------------------
# The Throttle Blocking Condition List resource
#-----------------------------------------------------
  BlockingConditionList:
    title: Blocking Conditions List
    properties:
      count:
        type: integer
        description: |
          Number of Blocking Conditions returned.
        example: 1
      next:
        type: string
        description: |
          Link to the next subset of resources qualified.
          Empty if no more resources are to be returned.
          example: "/throttling/blocking-conditions?limit=1&offset=2&query="
      previous:
        type: string
        description: |
          Link to the previous subset of resources qualified.
          Empty if current subset is the first subset returned.
          example: "/throttling/blocking-conditions?limit=1&offset=0&query="
      list:
        type: array
        items:
          $ref: '#/definitions/BlockingCondition'

#-----------------------------------------------------
# Custom Attribute object
#-----------------------------------------------------
  CustomAttribute:
    title: Name-Value pair
    properties:
      name:
        type: string
      value:
        type: string
#-----------------------------------------------------
# END-OF-FILE
#-----------------------------------------------------