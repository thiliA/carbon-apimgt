{
  "swagger": "2.0",
  "info": {
    "version": "0.9.0",
    "title": "WSO2 API Manager - Admin",
    "description": "This document specifies a **RESTful API** for WSO2 **API Manager** - Admin Portal.\n\nIt is written with [swagger 2](http://swagger.io/).\n",
    "contact": {
      "name": "WSO2",
      "url": "http://wso2.com/products/api-manager/",
      "email": "architecture@wso2.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "schemes": [
    "https"
  ],
  "host": "apis.wso2.com",
  "basePath": "/api/am/admin/v0.9",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "x-wso2-security": {
    "apim": {
      "x-wso2-scopes": [
        {
          "description": "",
          "roles": "admin",
          "name": "apim:tier_view",
          "key": "apim:tier_view"
        },
        {
          "description": "",
          "roles": "admin",
          "name": "apim:tier_manage",
          "key": "apim:tier_manage"
        },
        {
          "description": "",
          "roles": "admin",
          "name": "apim:bl_view",
          "key": "apim:bl_view"
        },
        {
          "description": "",
          "roles": "admin",
          "name": "apim:bl_manage",
          "key": "apim:bl_manage"
        }
      ]
    }
  },
  "paths": {
    "/throttling/policies/application": {
      "get": {
        "x-scope": "apim:tier_view",
        "summary": "Get all Application level throttle policies",
        "description": "Get all Application level throttle policies\n",
        "parameters": [
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "200": {
            "description": "OK.\nPolicies returned\n",
            "schema": {
              "$ref": "#/definitions/ApplicationThrottlePolicyList"
            },
            "headers": {
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "x-scope": "apim:tier_manage",
        "summary": "Add an Application level throttle policy",
        "description": "Add an Application level throttle policy\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Application level policy object that should to be added\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationThrottlePolicy"
            }
          },
          {
            "$ref": "#/parameters/Content-Type"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "201": {
            "description": "Created.\nSuccessful response with the newly created object as entity in the body.\nLocation header contains URL of newly created entity.\n",
            "schema": {
              "$ref": "#/definitions/ApplicationThrottlePolicy"
            },
            "headers": {
              "Location": {
                "description": "Location of the newly created Policy object.\n",
                "type": "string"
              },
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request'\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "description": "Unsupported media type.\nThe entity of the request was in a not supported format.\n"
          }
        }
      }
    },
    "/throttling/policies/application/{policyName}": {
      "get": {
        "x-scope": "apim:tier_view",
        "summary": "Retrieve an Application Policy",
        "description": "Retrieve an Application Policy providing the policy name.\n",
        "parameters": [
          {
            "$ref": "#/parameters/policyName"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "200": {
            "description": "OK.\nPolicy returned\n",
            "schema": {
              "$ref": "#/definitions/ApplicationThrottlePolicy"
            },
            "headers": {
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "404": {
            "description": "Not Found.\nRequested Tier does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "x-scope": "apim:tier_manage",
        "summary": "Delete an Application level throttle policy",
        "description": "Delete an Application level throttle policy\n",
        "parameters": [
          {
            "$ref": "#/parameters/policyName"
          },
          {
            "$ref": "#/parameters/If-Match"
          },
          {
            "$ref": "#/parameters/If-Unmodified-Since"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "200": {
            "description": "OK.\nResource successfully deleted.\n"
          },
          "404": {
            "description": "Not Found.\nResource to be deleted does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "x-scope": "apim:tier_manage",
        "summary": "Update an Application level throttle policy",
        "description": "Update an Application level throttle policy\n",
        "parameters": [
          {
            "$ref": "#/parameters/policyName"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Policy object that needs to be modified\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationThrottlePolicy"
            }
          },
          {
            "$ref": "#/parameters/Content-Type"
          },
          {
            "$ref": "#/parameters/If-Match"
          },
          {
            "$ref": "#/parameters/If-Unmodified-Since"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "200": {
            "description": "OK.\nPolicy updated.\n",
            "schema": {
              "$ref": "#/definitions/ApplicationThrottlePolicy"
            },
            "headers": {
              "Location": {
                "description": "The URL of the newly created resource.\n",
                "type": "string"
              },
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found.\nThe resource to be updated does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/throttling/policies/subscription": {
      "get": {
        "x-scope": "apim:tier_view",
        "summary": "Get all Subscription level throttle policies",
        "description": "Get all Subscription level throttle policies\n",
        "parameters": [
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "200": {
            "description": "OK.\nPolicies returned\n",
            "schema": {
              "$ref": "#/definitions/SubscriptionThrottlePolicyList"
            },
            "headers": {
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "x-scope": "apim:tier_manage",
        "summary": "Add a Subscription level throttle policy",
        "description": "Add a Subscription level throttle policy\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Subscripion level policy object that should to be added\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionThrottlePolicy"
            }
          },
          {
            "$ref": "#/parameters/Content-Type"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "201": {
            "description": "Created.\nSuccessful response with the newly created object as entity in the body.\nLocation header contains URL of newly created entity.\n",
            "schema": {
              "$ref": "#/definitions/SubscriptionThrottlePolicy"
            },
            "headers": {
              "Location": {
                "description": "Location of the newly created Policy object.\n",
                "type": "string"
              },
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request'\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "description": "Unsupported media type.\nThe entity of the request was in a not supported format.\n"
          }
        }
      }
    },
    "/throttling/policies/subscription/{policyName}": {
      "get": {
        "x-scope": "apim:tier_view",
        "summary": "Retrieve a Subscription Policy",
        "description": "Retrieve a Subscription Policy providing the policy name.\n",
        "parameters": [
          {
            "$ref": "#/parameters/policyName"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "200": {
            "description": "OK.\nPolicy returned\n",
            "schema": {
              "$ref": "#/definitions/SubscriptionThrottlePolicy"
            },
            "headers": {
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "404": {
            "description": "Not Found.\nRequested Policy does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "x-scope": "apim:tier_manage",
        "summary": "Delete a Subscription level throttle policy",
        "description": "Delete a Subscription level throttle policy\n",
        "parameters": [
          {
            "$ref": "#/parameters/policyName"
          },
          {
            "$ref": "#/parameters/If-Match"
          },
          {
            "$ref": "#/parameters/If-Unmodified-Since"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "200": {
            "description": "OK.\nResource successfully deleted.\n"
          },
          "404": {
            "description": "Not Found.\nResource to be deleted does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "x-scope": "apim:tier_manage",
        "summary": "Update a Subscription level throttle policy",
        "description": "Update a Subscription level throttle policy\n",
        "parameters": [
          {
            "$ref": "#/parameters/policyName"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Policy object that needs to be modified\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionThrottlePolicy"
            }
          },
          {
            "$ref": "#/parameters/Content-Type"
          },
          {
            "$ref": "#/parameters/If-Match"
          },
          {
            "$ref": "#/parameters/If-Unmodified-Since"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "200": {
            "description": "OK.\nPolicy updated.\n",
            "schema": {
              "$ref": "#/definitions/SubscriptionThrottlePolicy"
            },
            "headers": {
              "Location": {
                "description": "The URL of the newly created resource.\n",
                "type": "string"
              },
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found.\nThe resource to be updated does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/throttling/policies/global": {
      "get": {
        "x-scope": "apim:tier_view",
        "summary": "Get all Global level throttle policies",
        "description": "Get all Global level throttle policies\n",
        "parameters": [
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "200": {
            "description": "OK.\nPolicies returned\n",
            "schema": {
              "$ref": "#/definitions/GlobalThrottlePolicyList"
            },
            "headers": {
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "x-scope": "apim:tier_manage",
        "summary": "Add a Global level throttle policy",
        "description": "Add a Global level throttle policy\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Global level policy object that should to be added\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GlobalThrottlePolicy"
            }
          },
          {
            "$ref": "#/parameters/Content-Type"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "201": {
            "description": "Created.\nSuccessful response with the newly created object as entity in the body.\nLocation header contains URL of newly created entity.\n",
            "schema": {
              "$ref": "#/definitions/GlobalThrottlePolicy"
            },
            "headers": {
              "Location": {
                "description": "Location of the newly created resource.\n",
                "type": "string"
              },
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request'\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "description": "Unsupported media type.\nThe entity of the request was in a not supported format.\n"
          }
        }
      }
    },
    "/throttling/policies/global/{policyName}": {
      "get": {
        "x-scope": "apim:tier_view",
        "summary": "Retrieve a Global Policy",
        "description": "Retrieve a Global Policy providing the policy name.\n",
        "parameters": [
          {
            "$ref": "#/parameters/policyName"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "200": {
            "description": "OK.\nPolicy returned\n",
            "schema": {
              "$ref": "#/definitions/GlobalThrottlePolicy"
            },
            "headers": {
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "404": {
            "description": "Not Found.\nRequested Policy does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "x-scope": "apim:tier_manage",
        "summary": "Delete a Global level throttle policy",
        "description": "Delete a Global level throttle policy\n",
        "parameters": [
          {
            "$ref": "#/parameters/policyName"
          },
          {
            "$ref": "#/parameters/If-Match"
          },
          {
            "$ref": "#/parameters/If-Unmodified-Since"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "200": {
            "description": "OK.\nResource successfully deleted.\n"
          },
          "404": {
            "description": "Not Found.\nResource to be deleted does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "x-scope": "apim:tier_manage",
        "summary": "Update a Global level throttle policy",
        "description": "Update a Global level throttle policy\n",
        "parameters": [
          {
            "$ref": "#/parameters/policyName"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Policy object that needs to be modified\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GlobalThrottlePolicy"
            }
          },
          {
            "$ref": "#/parameters/Content-Type"
          },
          {
            "$ref": "#/parameters/If-Match"
          },
          {
            "$ref": "#/parameters/If-Unmodified-Since"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "200": {
            "description": "OK.\nPolicy updated.\n",
            "schema": {
              "$ref": "#/definitions/GlobalThrottlePolicy"
            },
            "headers": {
              "Location": {
                "description": "The URL of the newly created resource.\n",
                "type": "string"
              },
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found.\nThe resource to be updated does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/throttling/policies/advanced-policies": {
      "get": {
        "x-scope": "apim:tier_view",
        "summary": "Get all Advanced level throttle policies",
        "description": "Get all Advanced level throttle policies\n",
        "parameters": [
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "200": {
            "description": "OK.\nPolicies returned\n",
            "schema": {
              "$ref": "#/definitions/AdvancedThrottlePolicyList"
            },
            "headers": {
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "x-scope": "apim:tier_manage",
        "summary": "Add an Advanced level throttle policy",
        "description": "Add an Advanced level throttle policy\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Advanced level policy object that should to be added\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdvancedThrottlePolicy"
            }
          },
          {
            "$ref": "#/parameters/Content-Type"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "201": {
            "description": "Created.\nSuccessful response with the newly created object as entity in the body.\nLocation header contains URL of newly created entity.\n",
            "schema": {
              "$ref": "#/definitions/AdvancedThrottlePolicy"
            },
            "headers": {
              "Location": {
                "description": "Location of the newly created Advanced Throttle policy.\n",
                "type": "string"
              },
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request'\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "description": "Unsupported media type.\nThe entity of the request was in a not supported format.\n"
          }
        }
      }
    },
    "/throttling/policies/advanced-policies/{policyName}": {
      "get": {
        "x-scope": "apim:tier_view",
        "summary": "Retrieve an Advanced Policy",
        "description": "Retrieve a Advanced Policy providing the policy name.\n",
        "parameters": [
          {
            "$ref": "#/parameters/policyName"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "200": {
            "description": "OK.\nPolicy returned\n",
            "schema": {
              "$ref": "#/definitions/AdvancedThrottlePolicy"
            },
            "headers": {
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "404": {
            "description": "Not Found.\nRequested Policy does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "x-scope": "apim:tier_manage",
        "summary": "Delete an Advanced level throttle policy",
        "description": "Delete an Advanced level throttle policy\n",
        "parameters": [
          {
            "$ref": "#/parameters/policyName"
          },
          {
            "$ref": "#/parameters/If-Match"
          },
          {
            "$ref": "#/parameters/If-Unmodified-Since"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "200": {
            "description": "OK.\nResource successfully deleted.\n"
          },
          "404": {
            "description": "Not Found.\nResource to be deleted does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "x-scope": "apim:tier_manage",
        "summary": "Update an Advanced level throttle policy",
        "description": "Update an Advanced level throttle policy\n",
        "parameters": [
          {
            "$ref": "#/parameters/policyName"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Policy object that needs to be modified\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdvancedThrottlePolicy"
            }
          },
          {
            "$ref": "#/parameters/Content-Type"
          },
          {
            "$ref": "#/parameters/If-Match"
          },
          {
            "$ref": "#/parameters/If-Unmodified-Since"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "200": {
            "description": "OK.\nPolicy updated.\n",
            "schema": {
              "$ref": "#/definitions/AdvancedThrottlePolicy"
            },
            "headers": {
              "Location": {
                "description": "The URL of the newly created resource.\n",
                "type": "string"
              },
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found.\nThe resource to be updated does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/throttling/blacklist": {
      "get": {
        "x-scope": "apim:bl_view",
        "summary": "Get all blocking condtions",
        "description": "Get all blocking condtions\n",
        "parameters": [
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "200": {
            "description": "OK.\nBlocking conditions returned\n",
            "schema": {
              "$ref": "#/definitions/BlockingConditionList"
            },
            "headers": {
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "x-scope": "apim:bl_manage",
        "summary": "Add a Blocking condition",
        "description": "Add a Blocking condition\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Blocking condition object that should to be added\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlockingCondition"
            }
          },
          {
            "$ref": "#/parameters/Content-Type"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "201": {
            "description": "Created.\nSuccessful response with the newly created object as entity in the body.\nLocation header contains URL of newly created entity.\n",
            "schema": {
              "$ref": "#/definitions/BlockingCondition"
            },
            "headers": {
              "Location": {
                "description": "Location of the newly created resource.\n",
                "type": "string"
              },
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request'\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "description": "Unsupported media type.\nThe entity of the request was in a not supported format.\n"
          }
        }
      }
    },
    "/throttling/blacklist/{conditionId}": {
      "get": {
        "x-scope": "apim:bl_view",
        "summary": "Retrieve a Blocking Condition",
        "description": "Retrieve a Blocking Condition providing the condition Id\n",
        "parameters": [
          {
            "$ref": "#/parameters/conditionId"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "200": {
            "description": "OK.\nCondition returned\n",
            "schema": {
              "$ref": "#/definitions/BlockingCondition"
            },
            "headers": {
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "404": {
            "description": "Not Found.\nRequested Condition does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "x-scope": "apim:bl_manage",
        "summary": "Delete a Blocking condition",
        "description": "Delete a Blocking condition\n",
        "parameters": [
          {
            "$ref": "#/parameters/conditionId"
          },
          {
            "$ref": "#/parameters/If-Match"
          },
          {
            "$ref": "#/parameters/If-Unmodified-Since"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "200": {
            "description": "OK.\nResource successfully deleted.\n"
          },
          "404": {
            "description": "Not Found.\nResource to be deleted does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "x-scope": "apim:bl_manage",
        "summary": "Update a Blocking condition",
        "description": "Update a Blocking condition\n",
        "parameters": [
          {
            "$ref": "#/parameters/conditionId"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Blocking condition object that needs to be modified\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlockingCondition"
            }
          },
          {
            "$ref": "#/parameters/Content-Type"
          },
          {
            "$ref": "#/parameters/If-Match"
          },
          {
            "$ref": "#/parameters/If-Unmodified-Since"
          }
        ],
        "tags": [
          "Throttling"
        ],
        "responses": {
          "200": {
            "description": "OK.\nPolicy updated.\n",
            "schema": {
              "$ref": "#/definitions/BlockingCondition"
            },
            "headers": {
              "Location": {
                "description": "The URL of the newly created resource.\n",
                "type": "string"
              },
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional request.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found.\nThe resource to be updated does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "policyName": {
      "name": "policyName",
      "in": "path",
      "description": "Thorttle policy name\n",
      "type": "string",
      "required": true
    },
    "conditionId": {
      "name": "conditionId",
      "in": "path",
      "description": "Blocking condition identifier \n",
      "type": "string",
      "required": true
    },
    "limit": {
      "name": "limit",
      "in": "query",
      "description": "Maximum size of resource array to return.\n",
      "default": 25,
      "type": "integer"
    },
    "offset": {
      "name": "offset",
      "in": "query",
      "description": "Starting point within the complete list of items qualified.\n",
      "default": 0,
      "type": "integer"
    },
    "Accept": {
      "name": "Accept",
      "in": "header",
      "description": "Media types acceptable for the response. Default is JSON.\n",
      "default": "JSON",
      "type": "string"
    },
    "Content-Type": {
      "name": "Content-Type",
      "in": "header",
      "description": "Media type of the entity in the body. Default is JSON.\n",
      "default": "JSON",
      "required": true,
      "type": "string"
    },
    "If-None-Match": {
      "name": "If-None-Match",
      "in": "header",
      "description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
      "type": "string"
    },
    "If-Modified-Since": {
      "name": "If-Modified-Since",
      "in": "header",
      "description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
      "type": "string"
    },
    "If-Match": {
      "name": "If-Match",
      "in": "header",
      "description": "Validator for conditional requests; based on ETag.\n",
      "type": "string"
    },
    "If-Unmodified-Since": {
      "name": "If-Unmodified-Since",
      "in": "header",
      "description": "Validator for conditional requests; based on Last Modified header.\n",
      "type": "string"
    }
  },
  "definitions": {
    "Error": {
      "title": "Error object returned with 4XX HTTP status",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "description": {
          "type": "string",
          "description": "A detail description about the error message.\n"
        },
        "moreInfo": {
          "type": "string",
          "description": "Preferably an url with more details about the error.\n"
        },
        "error": {
          "type": "array",
          "description": "If there are more than one error list them out.\nFor example, list out validation errors by each field.\n",
          "items": {
            "$ref": "#/definitions/ErrorListItem"
          }
        }
      }
    },
    "ErrorListItem": {
      "title": "Description of individual errors that may have occurred during a request.",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "description": "Description about individual errors occurred\n"
        }
      }
    },
    "ThrottlePolicy": {
      "title": "Generic Throttle Policy",
      "properties": {
        "policyName": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "defaultLimit": {
          "$ref": "#/definitions/ThrottleLimit"
        },
        "tenantDomain": {
          "type": "string"
        },
        "isDeployed": {
          "type": "boolean"
        }
      }
    },
    "AdvancedThrottlePolicy": {
      "title": "Advanced Throttling Policy",
      "allOf": [
        {
          "$ref": "#/definitions/ThrottlePolicy"
        },
        {
          "properties": {
            "userLevel": {
              "type": "string",
              "description": "Applicable throttling level",
              "enum": [
                "apiLevel",
                "userLevel"
              ]
            },
            "conditionalGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConditionalGroup"
              }
            }
          }
        }
      ]
    },
    "AdvancedThrottlePolicyList": {
      "title": "Advanced Throttle Policy List",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of Advanced throttle policies returned.\n",
          "example": 1
        },
        "next": {
          "type": "string",
          "description": "Link to the next subset of resources qualified.\nEmpty if no more resources are to be returned.\nexample: \"/throttling/policies/advnced-policies?limit=1&offset=2&query=\"\n"
        },
        "previous": {
          "type": "string",
          "description": "Link to the previous subset of resources qualified.\nEmpty if current subset is the first subset returned.\nexample: \"/throttling/policies/advnced-policies?limit=1&offset=0&query=\"\n"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdvancedThrottlePolicy"
          }
        }
      }
    },
    "ApplicationThrottlePolicy": {
      "title": "Application Throttle Policy",
      "allOf": [
        {
          "$ref": "#/definitions/ThrottlePolicy"
        }
      ]
    },
    "ApplicationThrottlePolicyList": {
      "title": "Application Level Throttle Policy List",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of Application throttle policies returned.\n",
          "example": 1
        },
        "next": {
          "type": "string",
          "description": "Link to the next subset of resources qualified.\nEmpty if no more resources are to be returned.\nexample: \"/throttling/policies/application?limit=1&offset=2&query=\"\n"
        },
        "previous": {
          "type": "string",
          "description": "Link to the previous subset of resources qualified.\nEmpty if current subset is the first subset returned.\nexample: \"/throttling/policies/application?limit=1&offset=0&query=\"\n"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationThrottlePolicy"
          }
        }
      }
    },
    "SubscriptionThrottlePolicy": {
      "title": "Subscription Throttle Policy",
      "allOf": [
        {
          "$ref": "#/definitions/ThrottlePolicy"
        },
        {
          "properties": {
            "rateLimitCount": {
              "type": "integer"
            },
            "rateLimitTimeUnit": {
              "type": "string"
            },
            "customAttributes": {
              "description": "Custom attributes added to the Subscription Throttle policy\n",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomAttribute"
              },
              "additionalProperties": {
                "type": "string"
              },
              "example": {}
            },
            "stopOnQuotaReach": {
              "type": "boolean"
            },
            "billingPlan": {
              "type": "string"
            }
          }
        }
      ]
    },
    "SubscriptionThrottlePolicyList": {
      "title": "Subscription Level Throttle Policy List",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of Subscription throttle policies returned.\n",
          "example": 1
        },
        "next": {
          "type": "string",
          "description": "Link to the next subset of resources qualified.\nEmpty if no more resources are to be returned.\nexample: \"/throttling/policies/subscription?limit=1&offset=2&query=\"\n"
        },
        "previous": {
          "type": "string",
          "description": "Link to the previous subset of resources qualified.\nEmpty if current subset is the first subset returned.\nexample: \"/throttling/policies/subscription?limit=1&offset=0&query=\"\n"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionThrottlePolicy"
          }
        }
      }
    },
    "GlobalThrottlePolicy": {
      "title": "Global Throttle Policy",
      "allOf": [
        {
          "$ref": "#/definitions/ThrottlePolicy"
        },
        {
          "properties": {
            "siddhiQuery": {
              "type": "string"
            },
            "keyTemplate": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GlobalThrottlePolicyList": {
      "title": "Global Level Throttle Policy List",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of Global throttle policies returned.\n",
          "example": 1
        },
        "next": {
          "type": "string",
          "description": "Link to the next subset of resources qualified.\nEmpty if no more resources are to be returned.\nexample: \"/throttling/policies/global?limit=1&offset=2&query=\"\n"
        },
        "previous": {
          "type": "string",
          "description": "Link to the previous subset of resources qualified.\nEmpty if current subset is the first subset returned.\nexample: \"/throttling/policies/global?limit=1&offset=0&query=\"\n"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GlobalThrottlePolicy"
          }
        }
      }
    },
    "ConditionalGroup": {
      "title": "Conditional Groups for Throttling",
      "properties": {
        "id": {
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThrottleCondition"
          }
        },
        "limit": {
          "$ref": "#/definitions/ThrottleLimit"
        }
      }
    },
    "ThrottleCondition": {
      "discriminator": "type",
      "x-wso2-subtypes": [
        "DateCondition",
        "DateRangeCondition",
        "HTTPVerbCondition",
        "HeaderCondition",
        "IPCondition",
        "JWTClaimsCondition",
        "QueryParameterCondition"
      ],
      "title": "Conditions used for Throttling",
      "description": "Throttling Conditions",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "DateCondition",
            "DateRangeCondition",
            "HTTPVerbCondition",
            "HeaderCondition",
            "IPCondition",
            "JWTClaimsCondition",
            "QueryParameterCondition"
          ]
        },
        "invertCondition": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "DateCondition": {
      "title": "Date based throttle condition",
      "allOf": [
        {
          "$ref": "#/definitions/ThrottleCondition"
        },
        {
          "properties": {
            "specificDate": {
              "type": "string"
            }
          }
        }
      ]
    },
    "DateRangeCondition": {
      "title": "Date range based throttle condition",
      "allOf": [
        {
          "$ref": "#/definitions/ThrottleCondition"
        },
        {
          "properties": {
            "startingDate": {
              "type": "string"
            },
            "endingDate": {
              "type": "string"
            }
          }
        }
      ]
    },
    "HTTPVerbCondition": {
      "title": "Http verb based throttle condition",
      "allOf": [
        {
          "$ref": "#/definitions/ThrottleCondition"
        },
        {
          "properties": {
            "httpVerb": {
              "type": "string"
            }
          }
        }
      ]
    },
    "HeaderCondition": {
      "title": "HTTP Header based throttle condition",
      "allOf": [
        {
          "$ref": "#/definitions/ThrottleCondition"
        },
        {
          "properties": {
            "headerName": {
              "type": "string"
            },
            "headerValue": {
              "type": "string"
            }
          }
        }
      ]
    },
    "IPCondition": {
      "title": "IP based throttle condition",
      "allOf": [
        {
          "$ref": "#/definitions/ThrottleCondition"
        },
        {
          "properties": {
            "ipConditionType": {
              "type": "string",
              "enum": [
                "IPRange",
                "IPSpecific"
              ]
            },
            "specificIP": {
              "type": "string"
            },
            "startingIP": {
              "type": "string"
            },
            "endingIP": {
              "type": "string"
            }
          }
        }
      ]
    },
    "JWTClaimsCondition": {
      "title": "JWT claim attibute based throttle condition",
      "allOf": [
        {
          "$ref": "#/definitions/ThrottleCondition"
        },
        {
          "properties": {
            "claimUrl": {
              "type": "string"
            },
            "attribute": {
              "type": "string"
            }
          }
        }
      ]
    },
    "QueryParameterCondition": {
      "title": "Query parameter based throttle condition",
      "allOf": [
        {
          "$ref": "#/definitions/ThrottleCondition"
        },
        {
          "properties": {
            "parameterName": {
              "type": "string"
            },
            "parameterValue": {
              "type": "string"
            }
          }
        }
      ]
    },
    "ThrottleLimit": {
      "discriminator": "type",
      "x-wso2-subtypes": [
        "RequestCountLimit",
        "BandwidthLimit"
      ],
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "RequestCountLimit",
            "BandwidthLimit"
          ]
        },
        "timeUnit": {
          "type": "string"
        },
        "unitTime": {
          "type": "integer"
        }
      }
    },
    "BandwidthLimit": {
      "allOf": [
        {
          "$ref": "#/definitions/ThrottleLimit"
        },
        {
          "properties": {
            "dataAmount": {
              "type": "integer",
              "format": "int64"
            },
            "dataUnit": {
              "type": "string"
            }
          }
        }
      ]
    },
    "RequestCountLimit": {
      "allOf": [
        {
          "$ref": "#/definitions/ThrottleLimit"
        },
        {
          "properties": {
            "requestCount": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      ]
    },
    "BlockingCondition": {
      "title": "Blocking Conditions",
      "description": "Blocking Conditions",
      "properties": {
        "conditionId": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "conditionType": {
          "type": "string"
        },
        "conditionValue": {
          "type": "string"
        }
      }
    },
    "BlockingConditionList": {
      "title": "Blocking Conditions List",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of Blocking Conditions returned.\n",
          "example": 1
        },
        "next": {
          "type": "string",
          "description": "Link to the next subset of resources qualified.\nEmpty if no more resources are to be returned.\nexample: \"/throttling/blocking-conditions?limit=1&offset=2&query=\"\n"
        },
        "previous": {
          "type": "string",
          "description": "Link to the previous subset of resources qualified.\nEmpty if current subset is the first subset returned.\nexample: \"/throttling/blocking-conditions?limit=1&offset=0&query=\"\n"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlockingCondition"
          }
        }
      }
    },
    "CustomAttribute": {
      "title": "Name-Value pair",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    }
  }
}